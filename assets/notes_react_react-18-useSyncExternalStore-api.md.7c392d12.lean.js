import{_ as o,C as e,o as t,c,H as l,Q as p,k as s,a as n}from"./chunks/framework.70fe992a.js";const C=JSON.parse('{"title":"[译] 了解 React 18 中为外部存储引入的新 Hook useSyncExternalStore","description":"","frontmatter":{},"headers":[],"relativePath":"notes/react/react-18-useSyncExternalStore-api.md","filePath":"notes/react/react-18-useSyncExternalStore-api.md","lastUpdated":1692256695000}'),r={name:"notes/react/react-18-useSyncExternalStore-api.md"},E=p("",17),y=s("p",null,[n("在并发渲染中，最初获取的颜色是蓝色。"),s("code",null,"React"),n(" 生成，存储更新为红色。"),s("code",null,"React"),n(" 会使用更新后的红色值继续呈现。这会导致 "),s("code",null,"UI"),n(' 不一致，也就是所谓的 "撕裂"。')],-1),i=p("",11),u=p("",6);function d(b,F,g,h,m,S){const a=e("ZoomImg");return t(),c("div",null,[E,l(a,{src:"/rendering_before_react_18.png",class:"w-fill"}),y,l(a,{src:"/concurrent_rendering_react_18.png",class:"w-fill"}),i,l(a,{src:"/use_sync_external_store.gif",width:"326"}),u])}const D=o(r,[["render",d]]);export{C as __pageData,D as default};
