import{_ as s,c as i,o as a,ak as t}from"./chunks/framework.BXZ7Tjj5.js";const k=JSON.parse('{"title":"HTTP 的 Server Send Event","description":"","frontmatter":{},"headers":[],"relativePath":"notes/http-tcp-ip/http-server-send-event.md","filePath":"notes/http-tcp-ip/http-server-send-event.md","lastUpdated":1693491215000}'),n={name:"notes/http-tcp-ip/http-server-send-event.md"};function l(d,e,o,h,p,r){return a(),i("div",null,e[0]||(e[0]=[t(`<h1 id="http-的-server-send-event" tabindex="-1">HTTP 的 Server Send Event <a class="header-anchor" href="#http-的-server-send-event" aria-label="Permalink to &quot;HTTP 的 Server Send Event&quot;">​</a></h1><p>在浏览器中，<code>Sever Sand Event</code> 是一种用于实时通信的技术。它允许 <code>服务器</code> 将数据流式传输到 <code>客户端</code> ，而不需要 <code>客户端</code> 发起请求。这种实时通信技术特别适用于需要实时更新的应用程序，例如聊天应用、股票市场数据等。实现一个单向推送消息无疑 <code>Sever Sand Event</code> 比 <code>Websocket</code> 更好。</p><h2 id="启用" tabindex="-1">启用 <a class="header-anchor" href="#启用" aria-label="Permalink to &quot;启用&quot;">​</a></h2><p>要启用 <code>Sever Sand Event</code>，可以通过以下步骤：</p><ul><li><ol><li>创建一个服务器端点：首先，您需要在服务器端创建一个端点来处理 <code>Sever Sand Event</code> 请求。这个端点应该能够接收客户端的连接，并将实时数据发送给客户端。</li></ol></li><li><ol start="2"><li>在客户端创建一个 <code>EventSource</code> 对象：在客户端，您需要创建一个 <code>EventSource</code> 对象来与服务器建立连接并接收数据。可以使用 <code>BOM</code> 中的 <code>EventSource API</code> 来实现。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eventSource</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EventSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://xxx.com/xxx-stream&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>在上面的代码中，<code>http://xxx.com/xxx-stream</code> 是服务器端创建的 <code>Sever Sand Event</code>。</p></li><li><ol start="3"><li>处理事件：一旦连接建立，<code>EventSource</code> 对象将自动接收来自服务器的数据。您可以使用 <code>onmessage</code> 事件处理程序来处理接收到的数据。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eventSource.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onmessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;New message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在上面的代码中，<code>event.data</code> 表示从服务器接收到的数据。</p></li><li><ol start="4"><li>关闭连接：当您不再需要接收实时数据时，可以通过调用 <code>EventSource</code> 实例的 <code>close()</code> 方法来关闭连接。</li></ol><p>通过上述步骤，您可以在浏览器中启用 <code>Sever Sand Event</code> ，并实现实时通信。请注意，<code>Sever Sand Event</code> 需要服务器端的支持，因此您需要在服务器端实现相应的逻辑来处理 <code>Sever Sand Event</code> 请求并发送实时数据给客户端。</p></li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource" target="_blank" rel="noreferrer">MDN EventSource</a></li></ul>`,7)]))}const E=s(n,[["render",l]]);export{k as __pageData,E as default};
