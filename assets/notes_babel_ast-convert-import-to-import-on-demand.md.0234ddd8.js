import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.70fe992a.js";const f=JSON.parse('{"title":"AST: 转换 Import 实现按需导入","description":"","frontmatter":{},"headers":[],"relativePath":"notes/babel/ast-convert-import-to-import-on-demand.md","filePath":"notes/babel/ast-convert-import-to-import-on-demand.md","lastUpdated":1693362409000}'),p={name:"notes/babel/ast-convert-import-to-import-on-demand.md"},o=l(`<h1 id="ast-转换-import-实现按需导入" tabindex="-1">AST: 转换 Import 实现按需导入 <a class="header-anchor" href="#ast-转换-import-实现按需导入" aria-label="Permalink to &quot;AST: 转换 Import 实现按需导入&quot;">​</a></h1><p>这里，我们自己来实现一个 <code>Bebel</code> 插件，来转换 <code>import</code> 实现按需导入。</p><embed src="https://cdn.jsdelivr.net/gh/zhixiangyao/CDN/images/icon/babel.svg" type="image/svg+xml"><p>主要是利用 <a href="https://www.npmjs.com/package/@babel/core" target="_blank" rel="noreferrer">@babel/core</a> 库的 <code>transform</code> 方法，还有 <a href="https://www.npmjs.com/package/@babel/types" target="_blank" rel="noreferrer">@babel/types</a> 库的 <code>isImportSpecifier</code>, <code>stringLiteral</code>, <code>importDefaultSpecifier</code>, <code>importDeclaration</code></p><h3 id="工具介绍" tabindex="-1">工具介绍 <a class="header-anchor" href="#工具介绍" aria-label="Permalink to &quot;工具介绍&quot;">​</a></h3><ul><li><p><strong>@babel/core</strong></p><ul><li><code>transform</code> 方法会帮我们自动遍历，在第二个参数中的 <strong><a href="https://babeljs.io/docs/en/plugins/" target="_blank" rel="noreferrer">plugins</a></strong> 参数，可以使用相应的预设或者插件来转换相应的代码</li></ul></li><li><p><strong>@babel/types</strong></p><ul><li><code>isImportSpecifier</code> 判断是不是 import 说明符（如果是 default 的不算）</li><li><code>stringLiteral</code> 声明一个 <code>&#39;xxx&#39;</code> 的 <strong>AST</strong></li><li><code>importDefaultSpecifier</code> 声明一个 <code>xxx</code> 的 <strong>AST</strong></li><li><code>importDeclaration</code> 声明一个 <code>import { xxx } from &#39;xxx&#39;;</code> 的 <strong>AST</strong></li></ul></li></ul><ul><li>在线 <strong><a href="https://astexplorer.net/" target="_blank" rel="noreferrer">AST Explorer</a></strong> 工具</li></ul><h3 id="转化对比" tabindex="-1">转化对比 <a class="header-anchor" href="#转化对比" aria-label="Permalink to &quot;转化对比&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-RmIoN" id="tab-ex2xtWi" checked="checked"><label for="tab-ex2xtWi">tab 转化前</label><input type="radio" name="group-RmIoN" id="tab-8iTyFSl"><label for="tab-8iTyFSl">tab 转化后</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Button } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Icon, View } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> vant, { List } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> _Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { post } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Button } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Icon, View } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> vant, { List } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> _Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { post } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios&#39;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Button </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant/lib/Button&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Icon </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant/lib/Icon&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> View </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant/lib/View&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> vant </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> List </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant/lib/List&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> _Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> post </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios/lib/post&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Button </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant/lib/Button&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Icon </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant/lib/Icon&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> View </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant/lib/View&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> vant </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> List </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant/lib/List&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> _Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> post </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios/lib/post&#39;</span></span></code></pre></div></div></div><ul><li>本文转换前 <code>import { Icon, View } from &#39;vant&#39;;</code> 的 <a href="https://astexplorer.net/#/gist/36aaec9e411568d451d7c0242c8bb8c2/3a49f58d998eb37921dfa95caa24e0345a6a9dfc" target="_blank" rel="noreferrer">AST 代码</a></li><li>本文转换后 <code>import { Icon } from &#39;vant/lib/Button&#39;;</code> <code>import { View } from &#39;vant/lib/Icon&#39;;</code> <a href="https://astexplorer.net/#/gist/36aaec9e411568d451d7c0242c8bb8c2/ec470a3d473a379d4e4f1177c226d5aa40e57091" target="_blank" rel="noreferrer">AST 代码</a></li></ul><h3 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h3><ul><li><a href="https://github.com/zhixiangyao/typescript-playground/blob/27800ff78097af7aafea4f513508b403b0de8fb3/src/transform/transformImport.ts#L13" target="_blank" rel="noreferrer">Github 源码</a></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  isImportSpecifier,</span></span>
<span class="line"><span style="color:#E1E4E8;">  stringLiteral,</span></span>
<span class="line"><span style="color:#E1E4E8;">  importDefaultSpecifier,</span></span>
<span class="line"><span style="color:#E1E4E8;">  importDeclaration,</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { transform } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> chalk } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;chalk&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { log } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@common/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { PluginItem, BabelFileResult, NodePath } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ImportDeclaration } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/types&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TransformImportPathPluginOptions</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">libraryName</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">libraryDirectory</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformImportPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">opt</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TransformImportPathPluginOptions</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PluginItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">libraryName</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">libraryDirectory</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> opt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    visitor: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">ImportDeclaration</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NodePath</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">ImportDeclaration</span><span style="color:#E1E4E8;">&gt;) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">node</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path </span><span style="color:#6A737D;">//      节点: import { Button, Icon } from &#39;vant&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">specifiers</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// import 有 2 种，一种是 specifier 一种是 default specifier</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 这里要排除掉 library 名不匹配，且非唯一 default import 导入（这里利用 default 只能在头部的特性，判断尾部就可以了）</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (source.value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> libraryName </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isImportSpecifier</span><span style="color:#E1E4E8;">(specifiers[specifiers.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> specifiers.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">specifier</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> newSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isImportSpecifier</span><span style="color:#E1E4E8;">(specifier)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              newSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stringLiteral</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">source</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">value</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">libraryDirectory</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">specifier</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">local</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              )</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              newSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stringLiteral</span><span style="color:#E1E4E8;">(source.value)</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">importDeclaration</span><span style="color:#E1E4E8;">([</span><span style="color:#B392F0;">importDefaultSpecifier</span><span style="color:#E1E4E8;">(specifier.local)], newSource)</span></span>
<span class="line"><span style="color:#E1E4E8;">          })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (result.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) path.</span><span style="color:#B392F0;">replaceWithMultiple</span><span style="color:#E1E4E8;">(result)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">replaceWith</span><span style="color:#E1E4E8;">(result[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformImport</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">  code </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">import { Button } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#9ECBFF;">import { Icon, View } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#9ECBFF;">import vant, { List } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#9ECBFF;">import Vue from &#39;vue&#39;;</span></span>
<span class="line"><span style="color:#9ECBFF;">import _Vue from &#39;vue&#39;;</span></span>
<span class="line"><span style="color:#9ECBFF;">import { post } from &#39;axios&#39;;\`</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">trimStart</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(chalk.</span><span style="color:#B392F0;">green</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;old =&gt; &#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">data</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BabelFileResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;">(code, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">transformImportPlugin</span><span style="color:#E1E4E8;">({ libraryName: </span><span style="color:#9ECBFF;">&#39;vant&#39;</span><span style="color:#E1E4E8;">, libraryDirectory: </span><span style="color:#9ECBFF;">&#39;lib&#39;</span><span style="color:#E1E4E8;"> }),</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">transformImportPlugin</span><span style="color:#E1E4E8;">({ libraryName: </span><span style="color:#9ECBFF;">&#39;axios&#39;</span><span style="color:#E1E4E8;">, libraryDirectory: </span><span style="color:#9ECBFF;">&#39;lib&#39;</span><span style="color:#E1E4E8;"> }),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 转换后</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// import { Button } from &#39;vant/lib/Button&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// import { Icon } from &#39;vant/lib/Icon&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// import vant from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(chalk.</span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;new =&gt; &#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(data?.code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> data?.code</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> transformImport</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { transformImportPlugin }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { TransformImportPathPluginOptions }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  isImportSpecifier,</span></span>
<span class="line"><span style="color:#24292E;">  stringLiteral,</span></span>
<span class="line"><span style="color:#24292E;">  importDefaultSpecifier,</span></span>
<span class="line"><span style="color:#24292E;">  importDeclaration,</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { transform } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> chalk } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;chalk&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { log } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@common/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { PluginItem, BabelFileResult, NodePath } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ImportDeclaration } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/types&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformImportPathPluginOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">libraryName</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">libraryDirectory</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformImportPlugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">opt</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformImportPathPluginOptions</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PluginItem</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">libraryName</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">libraryDirectory</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> opt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    visitor: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">ImportDeclaration</span><span style="color:#24292E;">(</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NodePath</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">ImportDeclaration</span><span style="color:#24292E;">&gt;) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">node</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path </span><span style="color:#6A737D;">//      节点: import { Button, Icon } from &#39;vant&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">specifiers</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">source</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// import 有 2 种，一种是 specifier 一种是 default specifier</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 这里要排除掉 library 名不匹配，且非唯一 default import 导入（这里利用 default 只能在头部的特性，判断尾部就可以了）</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (source.value </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> libraryName </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isImportSpecifier</span><span style="color:#24292E;">(specifiers[specifiers.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> specifiers.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">specifier</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> newSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isImportSpecifier</span><span style="color:#24292E;">(specifier)) {</span></span>
<span class="line"><span style="color:#24292E;">              newSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stringLiteral</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">source</span><span style="color:#032F62;">.</span><span style="color:#24292E;">value</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">libraryDirectory</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">specifier</span><span style="color:#032F62;">.</span><span style="color:#24292E;">local</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              )</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              newSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stringLiteral</span><span style="color:#24292E;">(source.value)</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">importDeclaration</span><span style="color:#24292E;">([</span><span style="color:#6F42C1;">importDefaultSpecifier</span><span style="color:#24292E;">(specifier.local)], newSource)</span></span>
<span class="line"><span style="color:#24292E;">          })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (result.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) path.</span><span style="color:#6F42C1;">replaceWithMultiple</span><span style="color:#24292E;">(result)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">replaceWith</span><span style="color:#24292E;">(result[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformImport</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">  code </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">import { Button } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#032F62;">import { Icon, View } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#032F62;">import vant, { List } from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#032F62;">import Vue from &#39;vue&#39;;</span></span>
<span class="line"><span style="color:#032F62;">import _Vue from &#39;vue&#39;;</span></span>
<span class="line"><span style="color:#032F62;">import { post } from &#39;axios&#39;;\`</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">trimStart</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chalk.</span><span style="color:#6F42C1;">green</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;old =&gt; &#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BabelFileResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">(code, {</span></span>
<span class="line"><span style="color:#24292E;">    plugins: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">transformImportPlugin</span><span style="color:#24292E;">({ libraryName: </span><span style="color:#032F62;">&#39;vant&#39;</span><span style="color:#24292E;">, libraryDirectory: </span><span style="color:#032F62;">&#39;lib&#39;</span><span style="color:#24292E;"> }),</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">transformImportPlugin</span><span style="color:#24292E;">({ libraryName: </span><span style="color:#032F62;">&#39;axios&#39;</span><span style="color:#24292E;">, libraryDirectory: </span><span style="color:#032F62;">&#39;lib&#39;</span><span style="color:#24292E;"> }),</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 转换后</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// import { Button } from &#39;vant/lib/Button&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// import { Icon } from &#39;vant/lib/Icon&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// import vant from &#39;vant&#39;;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chalk.</span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;new =&gt; &#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(data?.code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> data?.code</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> transformImport</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { transformImportPlugin }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { TransformImportPathPluginOptions }</span></span></code></pre></div>`,13),e=[o];function t(r,c,E,y,i,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{f as __pageData,d as default};
