import{_ as i,c as a,o as s,a8 as e}from"./chunks/framework.CBChqOMV.js";const b=JSON.parse('{"title":"文件链接方式","description":"","frontmatter":{},"headers":[],"relativePath":"notes/linux/file-link-methods.md","filePath":"notes/linux/file-link-methods.md","lastUpdated":1693676809000}'),l={name:"notes/linux/file-link-methods.md"},t=e('<h1 id="文件链接方式" tabindex="-1">文件链接方式 <a class="header-anchor" href="#文件链接方式" aria-label="Permalink to &quot;文件链接方式&quot;">​</a></h1><p>在Linux系统中，有两种主要的文件链接方式：硬链接（<code>Hard Link</code>）和软链接（<code>Symbolic Link</code>）。</p><ul><li><p>硬链接（<code>Hard Link</code>）：</p><ul><li>硬链接是通过文件索引节点（<code>Inode</code>）来实现的，它直接指向文件数据的指针。</li><li>硬链接可以将一个文件拥有多个文件名，多个文件名指向同一个数据块。</li><li>硬链接只能链接到同一文件系统中的文件，不能链接到不同的文件系统。</li><li>删除任何一个硬链接不会影响其他硬链接，只有当所有硬链接都被删除时，文件的数据块才会被释放。</li></ul></li><li><p>软链接（<code>Symbolic Link</code>）：</p><ul><li>软链接也被称为符号链接，它是一个特殊类型的文件，包含了指向目标文件或目录的路径名。</li><li>软链接类似于 <code>Windows</code> 系统中的快捷方式，它是一个指向目标文件的快捷方式。</li><li>软链接可以链接到不同的文件系统中的文件，甚至可以链接到不存在的文件。</li><li>删除软链接不会影响目标文件，但如果目标文件被删除或移动，软链接将无效。</li></ul></li></ul><h2 id="硬链接-hard-link" tabindex="-1">硬链接 (<code>Hard Link</code>) <a class="header-anchor" href="#硬链接-hard-link" aria-label="Permalink to &quot;硬链接 (`Hard Link`)&quot;">​</a></h2><p>硬链接 (<code>Hard Link</code>)是 <code>Linux</code> 系统中的一种文件链接方式，它允许一个文件拥有多个文件名，即一个文件可以通过多个不同的文件名访问。与软链接（<code>Symbolic Link</code>）不同，硬链接是直接指向文件数据的指针，而不是指向文件路径的指针。</p><p>使用硬链接可以节省存储空间，因为它们共享相同的文件数据块。只有当所有硬链接都被删除时，文件的数据块才会被释放。</p><h3 id="创建硬链接" tabindex="-1">创建硬链接 <a class="header-anchor" href="#创建硬链接" aria-label="Permalink to &quot;创建硬链接&quot;">​</a></h3><p>要创建一个硬链接，可以使用 <code>ln</code> 命令，并提供源文件和目标链接文件的路径作为参数。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">源文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">目标链接文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/source_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/link_file</span></span></code></pre></div><p>这将在指定路径下创建一个新的硬链接文件。</p><h3 id="查看硬链接" tabindex="-1">查看硬链接 <a class="header-anchor" href="#查看硬链接" aria-label="Permalink to &quot;查看硬链接&quot;">​</a></h3><p>要查看文件的硬链接数量，可以使用ls命令，并使用 <code>-l</code> 选项来显示文件的详细信息。硬链接的数量将在第二列中显示。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/file</span></span></code></pre></div><p>这将显示文件的详细信息，包括硬链接的数量。</p><h3 id="删除硬链接" tabindex="-1">删除硬链接 <a class="header-anchor" href="#删除硬链接" aria-label="Permalink to &quot;删除硬链接&quot;">​</a></h3><p>要删除一个硬链接，可以使用 <code>rm</code> 命令，并提供链接文件的路径作为参数。删除硬链接并不会影响 <code>原始文件</code> 或 <code>其他硬链接</code>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/link_file</span></span></code></pre></div><p>这将删除指定的硬链接文件。</p><h3 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>需要注意的是，硬链接只能链接到 <code>同一文件系统</code> 中的文件。不能在不同的文件系统之间创建硬链接。</p></div><h2 id="软链接-symbolic-link" tabindex="-1">软链接（<code>Symbolic Link</code>） <a class="header-anchor" href="#软链接-symbolic-link" aria-label="Permalink to &quot;软链接（`Symbolic Link`）&quot;">​</a></h2><p>软链接（<code>Symbolic Link</code>）是 <code>Linux</code> 系统中的一种文件链接方式，也被称为符号链接。软链接是一个特殊类型的文件，它包含了指向目标文件或目录的路径名。</p><p>软链接与硬链接不同，它是一个指向目标文件的快捷方式，而不是直接指向文件数据的指针。软链接文件本身只是一个文本文件，其中包含了目标文件的路径信息。</p><h3 id="创建软链接" tabindex="-1">创建软链接 <a class="header-anchor" href="#创建软链接" aria-label="Permalink to &quot;创建软链接&quot;">​</a></h3><p>要创建一个软链接，可以使用 <code>ln</code> 命令，并提供目标文件的路径和链接文件的路径作为参数。使用 <code>-s</code> 选项来指定创建软链接。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">目标文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">链接文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/target_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/link_file</span></span></code></pre></div><p>这将在指定路径下创建一个新的软链接文件。</p><h3 id="查看软链接" tabindex="-1">查看软链接 <a class="header-anchor" href="#查看软链接" aria-label="Permalink to &quot;查看软链接&quot;">​</a></h3><p>要查看软链接的详细信息，可以使用 <code>ls</code> 命令，并使用 <code>-l</code> 选项来显示文件的详细信息。软链接的路径将在第一个列中显示，并以箭头指示链接的目标文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/link_file</span></span></code></pre></div><p>这将显示软链接文件的详细信息，包括链接的目标文件路径。</p><h3 id="删除软链接" tabindex="-1">删除软链接 <a class="header-anchor" href="#删除软链接" aria-label="Permalink to &quot;删除软链接&quot;">​</a></h3><p>删除一个软链接，可以使用 <code>rm</code> 命令，并提供链接文件的路径作为参数。删除软链接 <code>不会影响目标文件</code> 。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/link_file</span></span></code></pre></div><p>这将删除指定的软链接文件。</p><h3 id="注意-1" tabindex="-1">注意 <a class="header-anchor" href="#注意-1" aria-label="Permalink to &quot;注意&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>需要注意的是，软链接可以链接到 <code>不同的文件系统</code> 中的文件，甚至可以链接到 <code>不存在的文件</code>。但如果目标文件被 <code>删除</code> 或 <code>移动</code>，软链接将失效。</p></div>',39),h=[t];function n(d,p,o,c,k,r){return s(),a("div",null,h)}const u=i(l,[["render",n]]);export{b as __pageData,u as default};
