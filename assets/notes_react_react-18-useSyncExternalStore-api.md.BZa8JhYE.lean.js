import{_ as t,C as p,c as h,o as k,ak as e,G as l,j as i,a}from"./chunks/framework.BXZ7Tjj5.js";const u=JSON.parse('{"title":"[译] 了解 React 18 中为外部存储引入的新 Hook useSyncExternalStore","description":"","frontmatter":{},"headers":[],"relativePath":"notes/react/react-18-useSyncExternalStore-api.md","filePath":"notes/react/react-18-useSyncExternalStore-api.md","lastUpdated":1735182349000}'),r={name:"notes/react/react-18-useSyncExternalStore-api.md"};function E(d,s,c,o,g,y){const n=p("ZoomImg");return k(),h("div",null,[s[0]||(s[0]=e("",17)),l(n,{src:"/rendering_before_react_18.png",class:"w-fill"}),s[1]||(s[1]=i("p",null,[a("在并发渲染中，最初获取的颜色是蓝色。"),i("code",null,"React"),a(" 生成，存储更新为红色。"),i("code",null,"React"),a(" 会使用更新后的红色值继续呈现。这会导致 "),i("code",null,"UI"),a(' 不一致，也就是所谓的 "撕裂"。')],-1)),l(n,{src:"/concurrent_rendering_react_18.png",class:"w-fill"}),s[2]||(s[2]=e("",11)),l(n,{src:"/use_sync_external_store.gif",width:"326"}),s[3]||(s[3]=e("",6))])}const F=t(r,[["render",E]]);export{u as __pageData,F as default};
