import{_ as o,E as e,o as t,c,J as l,S as p,k as s,a as n}from"./chunks/framework.1d89e2bb.js";const S=JSON.parse('{"title":"[译] 了解 React 18 中为外部存储引入的新 Hook useSyncExternalStore","description":"","frontmatter":{},"headers":[],"relativePath":"notes/react/react-18-useSyncExternalStore-api.md","filePath":"notes/react/react-18-useSyncExternalStore-api.md","lastUpdated":1692256695000}'),r={name:"notes/react/react-18-useSyncExternalStore-api.md"},y=p("",17),F=s("p",null,[n("在并发渲染中，最初获取的颜色是蓝色。"),s("code",null,"React"),n(" 生成，存储更新为红色。"),s("code",null,"React"),n(" 会使用更新后的红色值继续呈现。这会导致 "),s("code",null,"UI"),n(' 不一致，也就是所谓的 "撕裂"。')],-1),D=p("",11),i=p("",6);function A(C,b,d,u,m,h){const a=e("ZoomImg");return t(),c("div",null,[y,l(a,{src:"/rendering_before_react_18.png",style:{width:"100%"}}),F,l(a,{src:"/concurrent_rendering_react_18.png",style:{width:"100%"}}),D,l(a,{src:"/use_sync_external_store.gif",width:"326"}),i])}const E=o(r,[["render",A]]);export{S as __pageData,E as default};
