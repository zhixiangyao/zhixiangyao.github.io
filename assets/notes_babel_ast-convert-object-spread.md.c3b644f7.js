import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.14d4b9fc.js";const g=JSON.parse('{"title":"AST: 转换对象 Spread","description":"","frontmatter":{},"headers":[],"relativePath":"notes/babel/ast-convert-object-spread.md","filePath":"notes/babel/ast-convert-object-spread.md","lastUpdated":1693363356000}'),p={name:"notes/babel/ast-convert-object-spread.md"},o=l(`<h1 id="ast-转换对象-spread" tabindex="-1">AST: 转换对象 Spread <a class="header-anchor" href="#ast-转换对象-spread" aria-label="Permalink to &quot;AST: 转换对象 Spread&quot;">​</a></h1><p>这里，我们自己来实现一个 <code>Bebel</code> 插件，来转换 <strong>Spread 语法</strong> 用 <strong>&quot;对象.key&quot;</strong> 实现。</p><embed src="https://cdn.jsdelivr.net/gh/zhixiangyao/CDN/images/icon/babel.svg" type="image/svg+xml"><p>主要是利用 <a href="https://www.npmjs.com/package/@babel/core" target="_blank" rel="noreferrer">@babel/core</a> 库的 <code>transform</code> 方法，还有 <a href="https://www.npmjs.com/package/@babel/types" target="_blank" rel="noreferrer">@babel/types</a> 库的 <code>isObjectPattern</code>, <code>identifier</code>, <code>memberExpression</code>, <code>variableDeclarator</code>, <code>variableDeclaration</code></p><h3 id="工具介绍" tabindex="-1">工具介绍 <a class="header-anchor" href="#工具介绍" aria-label="Permalink to &quot;工具介绍&quot;">​</a></h3><ul><li><p><strong>@babel/core</strong></p><ul><li><code>transform</code> 方法会帮我们自动遍历，在第二个参数中的 <strong><a href="https://babeljs.io/docs/en/plugins/" target="_blank" rel="noreferrer">plugins</a></strong> 参数，可以使用相应的预设或者插件来转换相应的代码</li></ul></li><li><p><strong>@babel/types</strong></p></li></ul><ul><li><code>isObjectPattern</code> 判断是不是 <strong>对象模式</strong></li><li><code>identifier</code> 声明一个 <code>xxx</code> 的 <strong>AST</strong></li><li><code>memberExpression</code> 声明一个 <code>xxx.xxx</code> 的 <strong>AST</strong></li><li><code>variableDeclarator</code> 声明一个 <code>xxx = xxx</code> 的 <strong>AST</strong></li><li><code>variableDeclaration</code> 声明一个 <code>var xxx, xxx</code> 的 <strong>AST</strong></li></ul><ul><li>在线 <strong><a href="https://astexplorer.net/" target="_blank" rel="noreferrer">AST Explorer</a></strong> 工具</li></ul><h3 id="转化对比" tabindex="-1">转化对比 <a class="header-anchor" href="#转化对比" aria-label="Permalink to &quot;转化对比&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-okfKc" id="tab-on5Uvy7" checked="checked"><label for="tab-on5Uvy7">tab 转化前</label><input type="radio" name="group-okfKc" id="tab-5bSBACT"><label for="tab-5bSBACT">tab 转化后</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">sex</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">age</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">empty</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">cute</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { sex: </span><span style="color:#9ECBFF;">&#39;male&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, cute: </span><span style="color:#9ECBFF;">&#39;yes&#39;</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">sex</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">age</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">empty</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">cute</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { sex: </span><span style="color:#032F62;">&#39;male&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, cute: </span><span style="color:#032F62;">&#39;yes&#39;</span><span style="color:#24292E;"> }</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _sex$age$cute </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    sex: </span><span style="color:#9ECBFF;">&#39;male&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cute: </span><span style="color:#9ECBFF;">&#39;yes&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  sex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#E1E4E8;">  empty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#E1E4E8;">  cute </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _sex$age$cute.cute</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _sex$age$cute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    sex: </span><span style="color:#032F62;">&#39;male&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    cute: </span><span style="color:#032F62;">&#39;yes&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  sex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#24292E;">  age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#24292E;">  empty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#24292E;">  cute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _sex$age$cute.cute</span></span></code></pre></div></div></div><ul><li>本文转换前的 <a href="https://astexplorer.net/#/gist/be77a34f3ffb465797959d1a0c2bf863/131460b40a1c063ae7702a6810a6a8804bd59dd8" target="_blank" rel="noreferrer">AST 代码</a></li><li>本文转换后的 <a href="https://astexplorer.net/#/gist/be77a34f3ffb465797959d1a0c2bf863/829ff43e37ae32b9918f3e0347713713dfc5efba" target="_blank" rel="noreferrer">AST 代码</a></li></ul><h3 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h3><ul><li><a href="https://github.com/zhixiangyao/typescript-playground/blob/27800ff78097af7aafea4f513508b403b0de8fb3/src/transform/transformObjectSpread.ts" target="_blank" rel="noreferrer">Github 源码</a></li></ul><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-LOCwy" id="tab-nosTEXQ" checked="checked"><label for="tab-nosTEXQ">tab 插件部分</label><input type="radio" name="group-LOCwy" id="tab-vlgX2k4"><label for="tab-vlgX2k4">tab 执行主体</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformObjectSpreadPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PluginItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    visitor: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">VariableDeclaration</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NodePath</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">VariableDeclaration</span><span style="color:#E1E4E8;">&gt;) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 节点: const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">node</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// declarations:{ sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">declarations</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">declaration</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> declarations) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// 边界判定 判断是不是 &quot;对象模式&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isObjectPattern</span><span style="color:#E1E4E8;">(declaration.id)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 左边的对象 { sex, age, empty, cute }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">leftObjects</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectPattern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> declaration.id</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// key 值数组集合 [ &#39;sex&#39;, &#39;age&#39;, &#39;empty&#39;, &#39;cute&#39; ]</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">leftKeys</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> leftObjects.properties.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">property</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Identifier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> property.key</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> key.name</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">init</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectExpression</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> declaration.init</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 右边的对象 { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rightObjects</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectProperty</span><span style="color:#E1E4E8;">[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> init.properties</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// key 值数组集合 [ &#39;sex&#39;, &#39;age&#39;, &#39;cute&#39; ]</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rightKeys</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rightObjects.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">property</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Identifier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> property.key</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> key.name</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 抽出来的对象名 _sex$age$cute</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">cornerstone</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Identifier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              leftKeys.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">acc</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (rightKeys.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(key)) acc </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> rightKeys.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> acc</span></span>
<span class="line"><span style="color:#E1E4E8;">              }, </span><span style="color:#9ECBFF;">&#39;_&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">arr</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VariableDeclarator</span><span style="color:#E1E4E8;">[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;">             *   sex: &#39;male&#39;,</span></span>
<span class="line"><span style="color:#6A737D;">             *   age: 12,</span></span>
<span class="line"><span style="color:#6A737D;">             *   cute: &#39;yes&#39;</span></span>
<span class="line"><span style="color:#6A737D;">             * }</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#E1E4E8;">            arr.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">variableDeclarator</span><span style="color:#E1E4E8;">(cornerstone, init))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;">             * age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;">             * empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;">             * cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#E1E4E8;">            leftKeys.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// sex</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">iden</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">(key)</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#E1E4E8;">              arr.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">variableDeclarator</span><span style="color:#E1E4E8;">(iden, </span><span style="color:#B392F0;">memberExpression</span><span style="color:#E1E4E8;">(cornerstone, iden)))</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            path.</span><span style="color:#B392F0;">replaceWith</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">variableDeclaration</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;var&#39;</span><span style="color:#E1E4E8;">, arr))</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformObjectSpreadPlugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PluginItem</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    visitor: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">VariableDeclaration</span><span style="color:#24292E;">(</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NodePath</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">VariableDeclaration</span><span style="color:#24292E;">&gt;) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 节点: const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">node</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// declarations:{ sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">declarations</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">declaration</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> declarations) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 边界判定 判断是不是 &quot;对象模式&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isObjectPattern</span><span style="color:#24292E;">(declaration.id)) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 左边的对象 { sex, age, empty, cute }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">leftObjects</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectPattern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> declaration.id</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// key 值数组集合 [ &#39;sex&#39;, &#39;age&#39;, &#39;empty&#39;, &#39;cute&#39; ]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">leftKeys</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftObjects.properties.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">property</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Identifier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> property.key</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> key.name</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">init</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectExpression</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> declaration.init</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 右边的对象 { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rightObjects</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectProperty</span><span style="color:#24292E;">[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> init.properties</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// key 值数组集合 [ &#39;sex&#39;, &#39;age&#39;, &#39;cute&#39; ]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rightKeys</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightObjects.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">property</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Identifier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> property.key</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> key.name</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 抽出来的对象名 _sex$age$cute</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cornerstone</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Identifier</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">identifier</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">              leftKeys.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">acc</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightKeys.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(key)) acc </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> rightKeys.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> acc</span></span>
<span class="line"><span style="color:#24292E;">              }, </span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VariableDeclarator</span><span style="color:#24292E;">[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;">             *   sex: &#39;male&#39;,</span></span>
<span class="line"><span style="color:#6A737D;">             *   age: 12,</span></span>
<span class="line"><span style="color:#6A737D;">             *   cute: &#39;yes&#39;</span></span>
<span class="line"><span style="color:#6A737D;">             * }</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#24292E;">            arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">variableDeclarator</span><span style="color:#24292E;">(cornerstone, init))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;">             * age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;">             * empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;">             * cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#24292E;">            leftKeys.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// sex</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">iden</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">identifier</span><span style="color:#24292E;">(key)</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#24292E;">              arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">variableDeclarator</span><span style="color:#24292E;">(iden, </span><span style="color:#6F42C1;">memberExpression</span><span style="color:#24292E;">(cornerstone, iden)))</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            path.</span><span style="color:#6F42C1;">replaceWith</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">variableDeclaration</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;var&#39;</span><span style="color:#24292E;">, arr))</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { transform } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  isObjectPattern,</span></span>
<span class="line"><span style="color:#E1E4E8;">  identifier,</span></span>
<span class="line"><span style="color:#E1E4E8;">  memberExpression,</span></span>
<span class="line"><span style="color:#E1E4E8;">  variableDeclarator,</span></span>
<span class="line"><span style="color:#E1E4E8;">  variableDeclaration,</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> chalk } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;chalk&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { log } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@common/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  VariableDeclaration,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ObjectExpression,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ObjectPattern,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ObjectProperty,</span></span>
<span class="line"><span style="color:#E1E4E8;">  Identifier,</span></span>
<span class="line"><span style="color:#E1E4E8;">  VariableDeclarator,</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { PluginItem, BabelFileResult, NodePath } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@babel/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Spread the Object</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">code</span><span style="color:#6A737D;"> const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6A737D;"> * var _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;"> *     sex: &quot;male&quot;,</span></span>
<span class="line"><span style="color:#6A737D;"> *     age: 12,</span></span>
<span class="line"><span style="color:#6A737D;"> *     cute: &quot;yes&quot;</span></span>
<span class="line"><span style="color:#6A737D;"> *   },</span></span>
<span class="line"><span style="color:#6A737D;"> *   sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;"> *   age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;"> *   empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;"> *   cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformObjectSpread</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">  code </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">time</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(chalk.green.</span><span style="color:#B392F0;">bold</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;old =&gt;&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">data</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BabelFileResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;">(code, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    plugins: [</span><span style="color:#B392F0;">transformObjectSpreadPlugin</span><span style="color:#E1E4E8;">()],</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 转换后</span></span>
<span class="line"><span style="color:#6A737D;">   * var _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;">   *     sex: &quot;male&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">   *     age: 12,</span></span>
<span class="line"><span style="color:#6A737D;">   *     cute: &quot;yes&quot;</span></span>
<span class="line"><span style="color:#6A737D;">   *   },</span></span>
<span class="line"><span style="color:#6A737D;">   *   sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;">   *   age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;">   *   empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;">   *   cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(chalk.red.</span><span style="color:#B392F0;">bold</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;New =&gt;&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(data?.code)</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">timeEnd</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> data?.code</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> transformObjectSpread</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { transformObjectSpreadPlugin }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { transform } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/core&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  isObjectPattern,</span></span>
<span class="line"><span style="color:#24292E;">  identifier,</span></span>
<span class="line"><span style="color:#24292E;">  memberExpression,</span></span>
<span class="line"><span style="color:#24292E;">  variableDeclarator,</span></span>
<span class="line"><span style="color:#24292E;">  variableDeclaration,</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> chalk } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;chalk&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { log } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@common/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  VariableDeclaration,</span></span>
<span class="line"><span style="color:#24292E;">  ObjectExpression,</span></span>
<span class="line"><span style="color:#24292E;">  ObjectPattern,</span></span>
<span class="line"><span style="color:#24292E;">  ObjectProperty,</span></span>
<span class="line"><span style="color:#24292E;">  Identifier,</span></span>
<span class="line"><span style="color:#24292E;">  VariableDeclarator,</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/types&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { PluginItem, BabelFileResult, NodePath } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@babel/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Spread the Object</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">code</span><span style="color:#6A737D;"> const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span></span>
<span class="line"><span style="color:#6A737D;"> * var _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;"> *     sex: &quot;male&quot;,</span></span>
<span class="line"><span style="color:#6A737D;"> *     age: 12,</span></span>
<span class="line"><span style="color:#6A737D;"> *     cute: &quot;yes&quot;</span></span>
<span class="line"><span style="color:#6A737D;"> *   },</span></span>
<span class="line"><span style="color:#6A737D;"> *   sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;"> *   age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;"> *   empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;"> *   cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformObjectSpread</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">  code </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`const { sex, age, empty, cute } = { sex: &#39;male&#39;, age: 12, cute: &#39;yes&#39; };\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chalk.green.</span><span style="color:#6F42C1;">bold</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;old =&gt;&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(code)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">data</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BabelFileResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">(code, {</span></span>
<span class="line"><span style="color:#24292E;">    plugins: [</span><span style="color:#6F42C1;">transformObjectSpreadPlugin</span><span style="color:#24292E;">()],</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 转换后</span></span>
<span class="line"><span style="color:#6A737D;">   * var _sex$age$cute = {</span></span>
<span class="line"><span style="color:#6A737D;">   *     sex: &quot;male&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">   *     age: 12,</span></span>
<span class="line"><span style="color:#6A737D;">   *     cute: &quot;yes&quot;</span></span>
<span class="line"><span style="color:#6A737D;">   *   },</span></span>
<span class="line"><span style="color:#6A737D;">   *   sex = _sex$age$cute.sex,</span></span>
<span class="line"><span style="color:#6A737D;">   *   age = _sex$age$cute.age,</span></span>
<span class="line"><span style="color:#6A737D;">   *   empty = _sex$age$cute.empty,</span></span>
<span class="line"><span style="color:#6A737D;">   *   cute = _sex$age$cute.cute;</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(chalk.red.</span><span style="color:#6F42C1;">bold</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;New =&gt;&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(data?.code)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> data?.code</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> transformObjectSpread</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { transformObjectSpreadPlugin }</span></span></code></pre></div></div></div>`,14),e=[o];function c(t,r,y,E,i,F){return a(),n("div",null,e)}const D=s(p,[["render",c]]);export{g as __pageData,D as default};
