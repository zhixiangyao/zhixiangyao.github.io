import{_ as l,c as t,I as n,a8 as e,l as s,a as i,o as p,E as h}from"./chunks/framework.B1kMQQcv.js";const D=JSON.parse('{"title":"[译] 了解 React 18 中为外部存储引入的新 Hook useSyncExternalStore","description":"","frontmatter":{},"headers":[],"relativePath":"notes/react/react-18-useSyncExternalStore-api.md","filePath":"notes/react/react-18-useSyncExternalStore-api.md","lastUpdated":1693386365000}'),k={name:"notes/react/react-18-useSyncExternalStore-api.md"},r=e("",17),E=s("p",null,[i("在并发渲染中，最初获取的颜色是蓝色。"),s("code",null,"React"),i(" 生成，存储更新为红色。"),s("code",null,"React"),i(" 会使用更新后的红色值继续呈现。这会导致 "),s("code",null,"UI"),i(' 不一致，也就是所谓的 "撕裂"。')],-1),d=e("",11),c=e("",6);function o(g,y,b,u,F,m){const a=h("ZoomImg");return p(),t("div",null,[r,n(a,{src:"/rendering_before_react_18.png",class:"w-fill"}),E,n(a,{src:"/concurrent_rendering_react_18.png",class:"w-fill"}),d,n(a,{src:"/use_sync_external_store.gif",width:"326"}),c])}const C=l(k,[["render",o]]);export{D as __pageData,C as default};
